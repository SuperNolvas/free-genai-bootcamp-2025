"""create_achievement_tables

Revision ID: 10682eed9882
Revises: 7cb03a408134
Create Date: 2025-03-15 15:40:30.102210+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '10682eed9882'
down_revision: Union[str, None] = '7cb03a408134'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('achievement_definitions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.Column('requirements', sa.JSON(), nullable=True),
    sa.Column('tier', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('achievement_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('achievement_id', sa.String(), nullable=False),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('achievement_metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_achievements_id'), 'achievements', ['id'], unique=False)
    op.add_column('points_of_interest', sa.Column('location', sa.JSON(), nullable=False))
    op.add_column('points_of_interest', sa.Column('type', sa.String(), nullable=False))
    op.add_column('points_of_interest', sa.Column('difficulty', sa.Integer(), nullable=True))
    op.add_column('points_of_interest', sa.Column('content_version', sa.Integer(), nullable=True))
    op.add_column('points_of_interest', sa.Column('content', sa.JSON(), nullable=False))
    op.add_column('points_of_interest', sa.Column('achievement_criteria', sa.JSON(), nullable=True))
    op.add_column('points_of_interest', sa.Column('points_value', sa.Integer(), nullable=True))
    op.add_column('points_of_interest', sa.Column('time_estimate', sa.Integer(), nullable=True))
    op.add_column('points_of_interest', sa.Column('learning_objectives', sa.JSON(), nullable=True))
    op.add_column('points_of_interest', sa.Column('sync_metadata', sa.JSON(), nullable=True))
    op.add_column('points_of_interest', sa.Column('is_published', sa.Boolean(), nullable=True))
    op.alter_column('points_of_interest', 'local_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('points_of_interest', 'poi_metadata')
    op.drop_column('points_of_interest', 'content_ids')
    op.drop_column('points_of_interest', 'difficulty_level')
    op.drop_column('points_of_interest', 'local_description')
    op.drop_column('points_of_interest', 'coordinates')
    op.drop_column('points_of_interest', 'description')
    op.drop_column('points_of_interest', 'poi_type')
    op.add_column('user_progress', sa.Column('region_id', sa.String(), nullable=True))
    op.create_foreign_key(None, 'user_progress', 'regions', ['region_id'], ['id'])
    op.drop_column('user_progress', 'region')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_progress', sa.Column('region', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'user_progress', type_='foreignkey')
    op.drop_column('user_progress', 'region_id')
    op.add_column('points_of_interest', sa.Column('poi_type', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('points_of_interest', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('points_of_interest', sa.Column('coordinates', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False))
    op.add_column('points_of_interest', sa.Column('local_description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('points_of_interest', sa.Column('difficulty_level', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.add_column('points_of_interest', sa.Column('content_ids', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('points_of_interest', sa.Column('poi_metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.alter_column('points_of_interest', 'local_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('points_of_interest', 'is_published')
    op.drop_column('points_of_interest', 'sync_metadata')
    op.drop_column('points_of_interest', 'learning_objectives')
    op.drop_column('points_of_interest', 'time_estimate')
    op.drop_column('points_of_interest', 'points_value')
    op.drop_column('points_of_interest', 'achievement_criteria')
    op.drop_column('points_of_interest', 'content')
    op.drop_column('points_of_interest', 'content_version')
    op.drop_column('points_of_interest', 'difficulty')
    op.drop_column('points_of_interest', 'type')
    op.drop_column('points_of_interest', 'location')
    op.drop_index(op.f('ix_achievements_id'), table_name='achievements')
    op.drop_table('achievements')
    op.drop_table('achievement_definitions')
    # ### end Alembic commands ###
